# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import question_analysis_pb2 as q__and__a__language__pb2


class LanguageAnalysisServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStringAnswer = channel.unary_unary(
                '/LanguageAnalysisService/GetStringAnswer',
                request_serializer=q__and__a__language__pb2.GetStringAnswerRequest.SerializeToString,
                response_deserializer=q__and__a__language__pb2.GetStringAnswerResponse.FromString,
                )
        self.GetProductProductAnswer = channel.unary_unary(
                '/LanguageAnalysisService/GetProductProductAnswer',
                request_serializer=q__and__a__language__pb2.GetProductAnswerRequest.SerializeToString,
                response_deserializer=q__and__a__language__pb2.GetProductAnswerResponse.FromString,
                )
        self.GetAnswerType = channel.unary_unary(
                '/LanguageAnalysisService/GetAnswerType',
                request_serializer=q__and__a__language__pb2.GetAnswerTypeRequest.SerializeToString,
                response_deserializer=q__and__a__language__pb2.GetAnswerTypeResponse.FromString,
                )
        self.GetQuestionType = channel.unary_unary(
                '/LanguageAnalysisService/GetQuestionType',
                request_serializer=q__and__a__language__pb2.GetQuestionTypeRequest.SerializeToString,
                response_deserializer=q__and__a__language__pb2.GetQuestionTypeResponse.FromString,
                )
        self.GetTimeOfAnswer = channel.unary_unary(
                '/LanguageAnalysisService/GetTimeOfAnswer',
                request_serializer=q__and__a__language__pb2.GetTimeOfAnswerRequest.SerializeToString,
                response_deserializer=q__and__a__language__pb2.GetTimeOfAnswerResponse.FromString,
                )


class LanguageAnalysisServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStringAnswer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductProductAnswer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAnswerType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQuestionType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeOfAnswer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LanguageAnalysisServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStringAnswer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStringAnswer,
                    request_deserializer=q__and__a__language__pb2.GetStringAnswerRequest.FromString,
                    response_serializer=q__and__a__language__pb2.GetStringAnswerResponse.SerializeToString,
            ),
            'GetProductProductAnswer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductProductAnswer,
                    request_deserializer=q__and__a__language__pb2.GetProductAnswerRequest.FromString,
                    response_serializer=q__and__a__language__pb2.GetProductAnswerResponse.SerializeToString,
            ),
            'GetAnswerType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAnswerType,
                    request_deserializer=q__and__a__language__pb2.GetAnswerTypeRequest.FromString,
                    response_serializer=q__and__a__language__pb2.GetAnswerTypeResponse.SerializeToString,
            ),
            'GetQuestionType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQuestionType,
                    request_deserializer=q__and__a__language__pb2.GetQuestionTypeRequest.FromString,
                    response_serializer=q__and__a__language__pb2.GetQuestionTypeResponse.SerializeToString,
            ),
            'GetTimeOfAnswer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeOfAnswer,
                    request_deserializer=q__and__a__language__pb2.GetTimeOfAnswerRequest.FromString,
                    response_serializer=q__and__a__language__pb2.GetTimeOfAnswerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'LanguageAnalysisService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LanguageAnalysisService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStringAnswer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LanguageAnalysisService/GetStringAnswer',
            q__and__a__language__pb2.GetStringAnswerRequest.SerializeToString,
            q__and__a__language__pb2.GetStringAnswerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductProductAnswer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LanguageAnalysisService/GetProductProductAnswer',
            q__and__a__language__pb2.GetProductAnswerRequest.SerializeToString,
            q__and__a__language__pb2.GetProductAnswerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAnswerType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LanguageAnalysisService/GetAnswerType',
            q__and__a__language__pb2.GetAnswerTypeRequest.SerializeToString,
            q__and__a__language__pb2.GetAnswerTypeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetQuestionType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LanguageAnalysisService/GetQuestionType',
            q__and__a__language__pb2.GetQuestionTypeRequest.SerializeToString,
            q__and__a__language__pb2.GetQuestionTypeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeOfAnswer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/LanguageAnalysisService/GetTimeOfAnswer',
            q__and__a__language__pb2.GetTimeOfAnswerRequest.SerializeToString,
            q__and__a__language__pb2.GetTimeOfAnswerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
