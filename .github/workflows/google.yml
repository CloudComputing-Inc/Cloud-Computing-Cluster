name: GKE Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Enable GCP Services
      run: gcloud services enable container.googleapis.com cloudapis.googleapis.com containerregistry.googleapis.com

    - name: Install gke-gcloud-auth-plugin
      run: |
        sudo apt-get update
        sudo apt-get install apt-transport-https ca-certificates gnupg curl
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        sudo apt-get update && sudo apt-get install google-cloud-cli
        sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin google-cloud-cli-gke-gcloud-auth-plugin

    - name: Check if GKE Cluster Exists
      id: check-cluster
      run: |
        if gcloud container clusters describe cluster-amazon-data --zone europe-west4-a; then
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "exists=false" >> $GITHUB_ENV
        fi

    - name: Create GKE Cluster
      if: env.exists == 'false'
      run: |
        gcloud container clusters create cluster-amazon-data \
          --zone=europe-west4-a \
          --cluster-version=latest \
          --num-nodes=3 \
          --machine-type=e2-medium \
          --enable-autorepair \
          --scopes=service-control,service-management,compute-rw,storage-ro,cloud-platform,logging-write,monitoring-write
        gcloud container clusters get-credentials cluster-amazon-data --zone europe-west4-a

    - name: Get User Account
      id: get-user
      run: |
        USER_ACCOUNT=$(gcloud config get-value core/account)
        if [ -z "$USER_ACCOUNT" ]; then
          SERVICE_ACCOUNT_EMAIL=${{ secrets.GCP_SA_EMAIL }}
          USER_ACCOUNT="$SERVICE_ACCOUNT_EMAIL"
        fi
        echo "USER_ACCOUNT=$USER_ACCOUNT" >> $GITHUB_ENV
        echo "Current authenticated account: $USER_ACCOUNT"

    - name: Get Credentials for Existing Cluster
      if: env.exists == 'true'
      run: gcloud container clusters get-credentials cluster-amazon-data --zone europe-west4-a

    - name: Configure GCP
      run: |
        chmod +x ./scripts/gcp_configure.sh
        ./scripts/gcp_configure.sh

    - name: Build and Push Docker Images
      run: |
        chmod +x ./scripts/gcr_publish.sh
        ./scripts/gcr_publish.sh

    - name: Apply Deployment Configurations
      run: |
        chmod +x ./scripts/gcr_apply_kubernetes.sh
        ./scripts/gcr_apply_kubernetes.sh

    - name: Run Tests
      run: |
        chmod +x ./scripts/test.sh
        ./scripts/test.sh
